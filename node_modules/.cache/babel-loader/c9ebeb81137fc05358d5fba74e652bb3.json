{"ast":null,"code":"var _jsxFileName = \"/home/arti/Portfolio/src/components/SideBar.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from 'react';\nimport \"../styles/sideBar.css\";\nimport Mock from \"../Json/Mock.json\";\nimport Contact from \"./Contact\";\nimport Toggler from \"./Toggler\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SideBar() {\n  _s();\n\n  const [modal, setmodal] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: modal ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contactDiv\",\n      children: /*#__PURE__*/_jsxDEV(Contact, {\n        setModal: setmodal,\n        modal: modal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sideBar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sideBarHero\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: Mock.personalInfo.profileImg ? Mock.personalInfo.profileImg : \"/assets/img/main.jpg\",\n          alt: \"/assets/img/main.jpg\",\n          className: \"profileImg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"myName\",\n          children: Mock.personalInfo.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"myJobTitle\",\n          children: Mock.personalInfo.jobTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sideBarBody\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"GeneralInfo\",\n          children: Mock.generalInfo.map((infoEle, id) => {\n            return /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"InfoTitle\",\n                children: [infoEle.infoTitle, \" :\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"InfoItem\",\n                children: infoEle.infoValue\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 13\n              }, this)]\n            }, id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 13\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"divider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sideBarTitle\",\n            children: \"Languages\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"Languages\",\n            children: Mock.personalInfo.languages.map((language, key) => {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"sideBarElement\",\n                children: language\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 17\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"divider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sideBarTitle\",\n            children: \"Education\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }, this), Mock.education.map((element, key) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"courseContainer\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sideBarSubTitle\",\n                children: element.educationType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"educationContainer\",\n                children: element.educationitems.map((ele, id) => {\n                  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"eduTitle\",\n                      children: [ele.title, \" :\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 64,\n                      columnNumber: 21\n                    }, this)\n                  }, id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 21\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }, this)]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mobileDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"divider\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"sideBarTitle\",\n            children: \"Skills\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"skillsContainer\",\n            children: Mock.skills.map((skill, id) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"skill\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"skillInner\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"skillFront\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: `${skill.iconClass} skillIcon`,\n                      style: {\n                        color: `${skill.iconColor}`\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 90,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"skillName\",\n                      children: skill.skillName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 91,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"skillBack\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: `${skill.iconClass} skillIcon`,\n                      style: {\n                        color: `${skill.iconColor}`\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 94,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"skillRating\",\n                      children: skill.skillRating.map((rating, key) => {\n                        return /*#__PURE__*/_jsxDEV(\"i\", {\n                          className: rating == 1 ? \"fas fa-star skillStar\" : rating == 0.5 ? \"fas fa-star-half-alt skillStar\" : \"far fa-star skillStar\"\n                        }, key, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 98,\n                          columnNumber: 57\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 95,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 37\n                }, this)\n              }, id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 33\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"divider\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"sideBarTitle\",\n            children: \"Projects\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), Mock.projects.map((project, key) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ProjectContainer\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"sideBarSubTitle\",\n                children: project.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"projectBodyContainer\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"projectDesc\",\n                  children: project.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 33\n                }, this), project.link ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    window.open(project.link, \"_blank\");\n                  },\n                  className: \"demoBtn\",\n                  children: \"Demo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 37\n                }, this) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 29\n              }, this)]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 25\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"divider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sideBarTitle\",\n            children: \"Experience\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 11\n          }, this), Mock.experience.map((element, key) => {\n            return /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sideBarSubTitle\",\n                children: element.company_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"educationContainer\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"eduTitle\",\n                  children: \"Position :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"eduItem\",\n                  children: element.position\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"eduTitle\",\n                  children: \"Tenure :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"eduItem\",\n                  children: [element.tenure.startDate, \" - \", element.tenure.endDate]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 17\n              }, this)]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"downloadCV\",\n          onClick: () => {\n            let resumeLink = Mock.personalInfo.resume ? Mock.personalInfo.resume : \"/assets/Docs/Resume.pdf\";\n            window.open(resumeLink);\n          },\n          children: \"Download CV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sideBarFooter\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fas fa-envelope-open-text icon message\",\n          style: {\n            color: \"#4267B2\"\n          },\n          onClick: () => {\n            setmodal(true);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-linkedin-square icon\",\n          style: {\n            color: \"#0e76a8\"\n          },\n          onClick: () => {\n            window.open(Mock.personalInfo.linkedIn);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fab fa-github icon\",\n          style: {\n            color: \"#292727\"\n          },\n          onClick: () => {\n            window.open(Mock.personalInfo.faceBook);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Toggler, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(SideBar, \"VwMg8qlYvOi8mCvMemSIP6HQB2Q=\");\n\n_c = SideBar;\nexport default SideBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SideBar\");","map":{"version":3,"sources":["/home/arti/Portfolio/src/components/SideBar.js"],"names":["React","useState","Mock","Contact","Toggler","SideBar","modal","setmodal","personalInfo","profileImg","name","jobTitle","generalInfo","map","infoEle","id","infoTitle","infoValue","languages","language","key","education","element","educationType","educationitems","ele","title","skills","skill","iconClass","color","iconColor","skillName","skillRating","rating","projects","project","description","link","window","open","experience","company_name","position","tenure","startDate","endDate","resumeLink","resume","linkedIn","faceBook"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAO,uBAAP;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,KAAD,CAAlC;AACA,sBACE;AAAA,cACCK,KAAK,gBACN;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACE,QAAC,OAAD;AACE,QAAA,QAAQ,EAAEC,QADZ;AAEE,QAAA,KAAK,EAAED;AAFT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADM,gBAQN;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACE;AAAK,UAAA,GAAG,EAAEJ,IAAI,CAACM,YAAL,CAAkBC,UAAlB,GAA+BP,IAAI,CAACM,YAAL,CAAkBC,UAAjD,GAA8D,sBAAxE;AAAiG,UAAA,GAAG,EAAC,sBAArG;AAA4H,UAAA,SAAS,EAAC;AAAtI;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,oBAAyBP,IAAI,CAACM,YAAL,CAAkBE;AAA3C;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,oBAA6BR,IAAI,CAACM,YAAL,CAAkBG;AAA/C;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,oBACCT,IAAI,CAACU,WAAL,CAAiBC,GAAjB,CAAqB,CAACC,OAAD,EAASC,EAAT,KAAc;AAClC,gCACE,QAAC,KAAD,CAAO,QAAP;AAAA,sCACA;AAAK,gBAAA,SAAS,EAAC,WAAf;AAAA,2BAA6BD,OAAO,CAACE,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,eAEA;AAAK,gBAAA,SAAS,EAAC,UAAf;AAAA,0BAA2BF,OAAO,CAACG;AAAnC;AAAA;AAAA;AAAA;AAAA,sBAFA;AAAA,eAAqBF,EAArB;AAAA;AAAA;AAAA;AAAA,oBADF;AAMD,WAPA;AADD;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAXF,eAaE;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAI,YAAA,SAAS,EAAC,WAAd;AAAA,sBACCb,IAAI,CAACM,YAAL,CAAkBU,SAAlB,CAA4BL,GAA5B,CAAgC,CAACM,QAAD,EAAUC,GAAV,KAAgB;AAC/C,kCACE;AAAI,gBAAA,SAAS,EAAC,gBAAd;AAAA,0BAA0CD;AAA1C,iBAAoCC,GAApC;AAAA;AAAA;AAAA;AAAA,sBADF;AAGD,aAJA;AADD;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF,eAwBE;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAxBF,eA0BE;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEGlB,IAAI,CAACmB,SAAL,CAAeR,GAAf,CAAmB,CAACS,OAAD,EAASF,GAAT,KAAe;AACjC,gCACE;AAAK,cAAA,SAAS,EAAC,iBAAf;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,iBAAf;AAAA,0BAAkCE,OAAO,CAACC;AAA1C;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAK,gBAAA,SAAS,EAAC,oBAAf;AAAA,0BACCD,OAAO,CAACE,cAAR,CAAuBX,GAAvB,CAA2B,CAACY,GAAD,EAAKV,EAAL,KAAU;AACpC,sCACE,QAAC,KAAD,CAAO,QAAP;AAAA,2CACA;AAAK,sBAAA,SAAS,EAAC,UAAf;AAAA,iCAA2BU,GAAG,CAACC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,qBAAqBX,EAArB;AAAA;AAAA;AAAA;AAAA,0BADF;AAMD,iBAPA;AADD;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA,eAAsCK,GAAtC;AAAA;AAAA;AAAA;AAAA,oBADF;AAeD,WAhBA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1BF,eAoDE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACA;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAI,YAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA,eAGQ;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAA,sBAEQlB,IAAI,CAACyB,MAAL,CAAYd,GAAZ,CAAgB,CAACe,KAAD,EAAOb,EAAP,KAAY;AACxB,kCACI;AAAK,gBAAA,SAAS,EAAC,OAAf;AAAA,uCACI;AAAK,kBAAA,SAAS,EAAC,YAAf;AAAA,0CACI;AAAK,oBAAA,SAAS,EAAC,YAAf;AAAA,4CACI;AAAG,sBAAA,SAAS,EAAG,GAAEa,KAAK,CAACC,SAAU,YAAjC;AAA8C,sBAAA,KAAK,EAAE;AAACC,wBAAAA,KAAK,EAAE,GAAEF,KAAK,CAACG,SAAU;AAA1B;AAArD;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI;AAAK,sBAAA,SAAS,EAAC,WAAf;AAAA,gCAA4BH,KAAK,CAACI;AAAlC;AAAA;AAAA;AAAA;AAAA,4BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAKI;AAAK,oBAAA,SAAS,EAAC,WAAf;AAAA,4CACI;AAAG,sBAAA,SAAS,EAAG,GAAEJ,KAAK,CAACC,SAAU,YAAjC;AAA8C,sBAAA,KAAK,EAAE;AAACC,wBAAAA,KAAK,EAAE,GAAEF,KAAK,CAACG,SAAU;AAA1B;AAArD;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI;AAAK,sBAAA,SAAS,EAAC,aAAf;AAAA,gCACKH,KAAK,CAACK,WAAN,CAAkBpB,GAAlB,CAAsB,CAACqB,MAAD,EAAQd,GAAR,KAAc;AACjC,4CACI;AAAG,0BAAA,SAAS,EAAEc,MAAM,IAAE,CAAR,GAAY,uBAAZ,GAAsCA,MAAM,IAAE,GAAR,GAAc,gCAAd,GAAiD;AAArG,2BAAmId,GAAnI;AAAA;AAAA;AAAA;AAAA,gCADJ;AAGH,uBAJA;AADL;AAAA;AAAA;AAAA;AAAA,4BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,iBAA4BL,EAA5B;AAAA;AAAA;AAAA;AAAA,sBADJ;AAoBH,aArBD;AAFR;AAAA;AAAA;AAAA;AAAA,kBAHR,eAgCI;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,kBAhCJ,eAiCI;AAAI,YAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjCJ,EAmCSb,IAAI,CAACiC,QAAL,CAActB,GAAd,CAAkB,CAACuB,OAAD,EAAShB,GAAT,KAAe;AAC9B,gCACI;AAAK,cAAA,SAAS,EAAC,kBAAf;AAAA,sCAEQ;AAAI,gBAAA,SAAS,EAAC,iBAAd;AAAA,0BAAiCgB,OAAO,CAAC1B;AAAzC;AAAA;AAAA;AAAA;AAAA,sBAFR,eAKI;AAAK,gBAAA,SAAS,EAAC,sBAAf;AAAA,wCACI;AAAK,kBAAA,SAAS,EAAC,aAAf;AAAA,4BACK0B,OAAO,CAACC;AADb;AAAA;AAAA;AAAA;AAAA,wBADJ,EAIKD,OAAO,CAACE,IAAR,gBACG;AAAQ,kBAAA,OAAO,EAAE,MAAI;AAACC,oBAAAA,MAAM,CAACC,IAAP,CAAYJ,OAAO,CAACE,IAApB,EAA0B,QAA1B;AAAqC,mBAA3D;AAA6D,kBAAA,SAAS,EAAC,SAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADH,GAEK,IANV;AAAA;AAAA;AAAA;AAAA;AAAA,sBALJ;AAAA,eAAuClB,GAAvC;AAAA;AAAA;AAAA;AAAA,oBADJ;AAiBH,WAlBA,CAnCT;AAAA;AAAA;AAAA;AAAA;AAAA,gBApDF,eA8GE;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBA9GF,eAgHE;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEGlB,IAAI,CAACuC,UAAL,CAAgB5B,GAAhB,CAAoB,CAACS,OAAD,EAASF,GAAT,KAAe;AAClC,gCACE,QAAC,KAAD,CAAO,QAAP;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,iBAAf;AAAA,0BAAkCE,OAAO,CAACoB;AAA1C;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAK,gBAAA,SAAS,EAAC,oBAAf;AAAA,wCACE;AAAK,kBAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAK,kBAAA,SAAS,EAAC,SAAf;AAAA,4BAA0BpB,OAAO,CAACqB;AAAlC;AAAA;AAAA;AAAA;AAAA,wBAFF,eAGE;AAAK,kBAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,eAIE;AAAK,kBAAA,SAAS,EAAC,SAAf;AAAA,6BAA0BrB,OAAO,CAACsB,MAAR,CAAeC,SAAzC,SAAuDvB,OAAO,CAACsB,MAAR,CAAeE,OAAtE;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA,eAAqB1B,GAArB;AAAA;AAAA;AAAA;AAAA,oBADF;AAWD,WAZA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhHF,eAmIE;AAAQ,UAAA,SAAS,EAAC,YAAlB;AAA+B,UAAA,OAAO,EAAE,MAAI;AAAC,gBAAI2B,UAAU,GAAE7C,IAAI,CAACM,YAAL,CAAkBwC,MAAlB,GAA2B9C,IAAI,CAACM,YAAL,CAAkBwC,MAA7C,GAAsD,yBAAtE;AAAiGT,YAAAA,MAAM,CAACC,IAAP,CAAYO,UAAZ;AAAwB,WAAtK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnIF;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eAkJE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACA;AAAG,UAAA,KAAK,EAAC,wCAAT;AAAkD,UAAA,KAAK,EAAE;AAACjB,YAAAA,KAAK,EAAC;AAAP,WAAzD;AAA4E,UAAA,OAAO,EAAE,MAAI;AAACvB,YAAAA,QAAQ,CAAC,IAAD,CAAR;AAAe;AAAzG;AAAA;AAAA;AAAA;AAAA,gBADA,eAGE;AAAG,UAAA,SAAS,EAAC,4BAAb;AAA0C,UAAA,KAAK,EAAE;AAACuB,YAAAA,KAAK,EAAC;AAAP,WAAjD;AAAqE,UAAA,OAAO,EAAE,MAAI;AAACS,YAAAA,MAAM,CAACC,IAAP,CAAYtC,IAAI,CAACM,YAAL,CAAkByC,QAA9B;AAAwC;AAA3H;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAG,UAAA,SAAS,EAAC,oBAAb;AAAkC,UAAA,KAAK,EAAE;AAACnB,YAAAA,KAAK,EAAC;AAAP,WAAzC;AAA4D,UAAA,OAAO,EAAE,MAAI;AAACS,YAAAA,MAAM,CAACC,IAAP,CAAYtC,IAAI,CAACM,YAAL,CAAkB0C,QAA9B;AAAwC;AAAlH;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cAlJF;AAAA;AAAA;AAAA;AAAA;AAAA;AATA,mBADF;AA0KD;;GA5KQ7C,O;;KAAAA,O;AA8KT,eAAeA,OAAf","sourcesContent":["import React from \"react\";\nimport {useState} from 'react'\nimport \"../styles/sideBar.css\";\nimport Mock from \"../Json/Mock.json\";\nimport Contact from \"./Contact\";\nimport Toggler from \"./Toggler\";\n\nfunction SideBar() {\n  const [modal, setmodal] = useState(false)\n  return (\n    <>\n    {modal ? \n    <div className=\"contactDiv\">\n      <Contact\n        setModal={setmodal}\n        modal={modal}\n      />\n    </div>\n    :\n    <div className=\"sideBar\">\n      <div className=\"sideBarHero\">\n        <img src={Mock.personalInfo.profileImg ? Mock.personalInfo.profileImg : \"/assets/img/main.jpg\"}  alt=\"/assets/img/main.jpg\" className=\"profileImg\" />\n        <div className=\"myName\">{Mock.personalInfo.name}</div>\n        <div className=\"myJobTitle\">{Mock.personalInfo.jobTitle}</div>\n      </div>\n      \n      {/* SideBar Body */}\n      <div className=\"sideBarBody\">\n        <div className=\"GeneralInfo\">\n        {Mock.generalInfo.map((infoEle,id)=>{\n          return(\n            <React.Fragment key={id}>\n            <div className=\"InfoTitle\" >{infoEle.infoTitle} :</div>\n            <div className=\"InfoItem\">{infoEle.infoValue}</div>\n            </React.Fragment>\n          )\n        })}\n        </div>\n        <div className=\"divider\"/>\n\n        <div>\n            <div className=\"sideBarTitle\">Languages</div>\n            <ul className=\"Languages\">\n            {Mock.personalInfo.languages.map((language,key)=>{\n              return(\n                <li className=\"sideBarElement\" key={key}>{language}</li>\n              )\n            })}\n            </ul>\n        </div>\n\n        <div className=\"divider\"/>\n        {/* Education */}\n        <div>\n          <div className=\"sideBarTitle\">Education</div>\n          {Mock.education.map((element,key)=>{\n            return(\n              <div className=\"courseContainer\" key={key}> \n                <div className=\"sideBarSubTitle\">{element.educationType}</div> \n                <div className=\"educationContainer\">\n                {element.educationitems.map((ele,id)=>{\n                  return(\n                    <React.Fragment key={id}>\n                    <div className=\"eduTitle\">{ele.title} :</div>\n                    {/* <div className=\"eduItem\">{ele.value}</div> */}\n                    </React.Fragment>\n                  )\n                })}\n                </div>\n              </div>\n            )\n          })}\n          \n          \n        </div>\n        {/* Education */}\n\n        {/* Unhide on Mobile View  */}\n        {/* My Skills  */}\n        <div className=\"mobileDiv\">\n        <div className=\"divider\"/>\n        <h2 className=\"sideBarTitle\">Skills</h2>\n                <div className=\"skillsContainer\">\n                    {\n                        Mock.skills.map((skill,id)=>{\n                            return(\n                                <div className=\"skill\" key={id}>\n                                    <div className=\"skillInner\">\n                                        <div className=\"skillFront\">\n                                            <i className={`${skill.iconClass} skillIcon`} style={{color:`${skill.iconColor}`}}/>\n                                            <div className=\"skillName\">{skill.skillName}</div>\n                                        </div>\n                                        <div className=\"skillBack\">\n                                            <i className={`${skill.iconClass} skillIcon`} style={{color:`${skill.iconColor}`}}/>\n                                            <div className=\"skillRating\">\n                                                {skill.skillRating.map((rating,key)=>{\n                                                    return(\n                                                        <i className={rating==1 ? \"fas fa-star skillStar\" : rating==0.5 ? \"fas fa-star-half-alt skillStar\" : \"far fa-star skillStar\"} key={key}/>\n                                                    )\n                                                })}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n            {/* My Skills  */}\n\n            {/* Projects */}\n            <div className=\"divider\"/>\n            <h2 className=\"sideBarTitle\">Projects</h2>\n            \n                {Mock.projects.map((project,key)=>{\n                    return(\n                        <div className=\"ProjectContainer\" key={key}>\n                            \n                                <h2 className=\"sideBarSubTitle\">{project.name}</h2>\n                                {/* <i className={showProjectInfo ? \"fas fa-chevron-down projectInfoIcon\": \"fas fa-chevron-up projectInfoIcon\"}  /> */}\n                            \n                            <div className=\"projectBodyContainer\">\n                                <div className=\"projectDesc\">\n                                    {project.description}\n                                </div>\n                                {project.link ?\n                                    <button onClick={()=>{window.open(project.link, \"_blank\");}} className=\"demoBtn\">Demo</button>\n                                    : null\n                                }\n                            </div>\n                        </div>\n                    );\n                })}\n            {/* Projects */}\n            </div>\n            {/* Unhide on mobile View */}\n\n        <div className=\"divider\"/>\n        {/* Experience */}\n        <div>\n          <div className=\"sideBarTitle\">Experience</div>\n          {Mock.experience.map((element,key)=>{\n            return(\n              <React.Fragment key={key}>\n                <div className=\"sideBarSubTitle\">{element.company_name}</div> \n                <div className=\"educationContainer\">\n                  <div className=\"eduTitle\">Position :</div>\n                  <div className=\"eduItem\">{element.position}</div>\n                  <div className=\"eduTitle\">Tenure :</div> \n                  <div className=\"eduItem\">{element.tenure.startDate} - {element.tenure.endDate}</div>\n                </div>\n              </React.Fragment>\n            )\n          })}\n        </div>\n        {/* Experience */}\n\n        {/* Download CV*/}\n        <button className=\"downloadCV\" onClick={()=>{let resumeLink= Mock.personalInfo.resume ? Mock.personalInfo.resume : \"/assets/Docs/Resume.pdf\"; window.open(resumeLink)}}>Download CV</button>\n        {/* Download CV*/}\n      </div>\n      {/* sideBar Body */}\n\n\n      {/* sideBar Footer  */}\n      <div className=\"sideBarFooter\">\n      <i class=\"fas fa-envelope-open-text icon message\" style={{color:\"#4267B2\"}} onClick={()=>{setmodal(true)}} />\n\n        <i className=\"fa fa-linkedin-square icon\" style={{color:\"#0e76a8\"}}  onClick={()=>{window.open(Mock.personalInfo.linkedIn)}}/>\n        <i className=\"fab fa-github icon\" style={{color:\"#292727\"}} onClick={()=>{window.open(Mock.personalInfo.faceBook)}}/>\n        {/* <i className=\"fab fa-whatsapp-square icon\" style={{color:\"#25D366\"}} onClick={()=>{let whatsappLink=\"https://wa.me/\"+Mock.personalInfo.mobileNumber;window.open(whatsappLink)}}/> */}\n\n        <Toggler />\n      </div>\n      {/* sideBar Footer  */}\n    </div>\n    }\n    </>\n  );\n}\n\nexport default SideBar;\n"]},"metadata":{},"sourceType":"module"}