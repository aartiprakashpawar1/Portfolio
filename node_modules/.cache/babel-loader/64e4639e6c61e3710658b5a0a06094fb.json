{"ast":null,"code":"var _jsxFileName = \"/home/arti/Portfolio/src/components/Main.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect } from 'react';\nimport \"../styles/Main.css\";\nimport Mock from \"../Json/Mock.json\";\nimport Contact from \"./Contact\";\nimport Toggler from \"./Toggler\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main() {\n  _s();\n\n  // const [showProjectInfo, setshowProjectInfo] = useState(true)\n  useEffect(() => {\n    var TxtType = function (el, toRotate, period) {\n      this.toRotate = toRotate;\n      this.el = el;\n      this.loopNum = 0;\n      this.period = parseInt(period, 10) || 2000;\n      this.txt = '';\n      this.tick();\n      this.isDeleting = false;\n    };\n\n    TxtType.prototype.tick = function () {\n      var i = this.loopNum % this.toRotate.length;\n      var fullTxt = this.toRotate[i];\n\n      if (this.isDeleting) {\n        this.txt = fullTxt.substring(0, this.txt.length - 1);\n      } else {\n        this.txt = fullTxt.substring(0, this.txt.length + 1);\n      }\n\n      this.el.innerHTML = '<span class=\"wrap\">' + this.txt + '</span>';\n      var that = this;\n      var delta = 200 - Math.random() * 100;\n\n      if (this.isDeleting) {\n        delta /= 2;\n      }\n\n      if (!this.isDeleting && this.txt === fullTxt) {\n        delta = this.period;\n        this.isDeleting = true;\n      } else if (this.isDeleting && this.txt === '') {\n        this.isDeleting = false;\n        this.loopNum++;\n        delta = 500;\n      }\n\n      setTimeout(function () {\n        that.tick();\n      }, delta);\n    };\n\n    window.onload = function () {\n      var elements = document.getElementsByClassName('typewrite');\n\n      for (var i = 0; i < elements.length; i++) {\n        var toRotate = elements[i].getAttribute('data-type');\n        var period = elements[i].getAttribute('data-period');\n\n        if (toRotate) {\n          new TxtType(elements[i], JSON.parse(toRotate), period);\n        }\n      } // INJECT CSS\n\n\n      var css = document.createElement(\"style\");\n      css.type = \"text/css\";\n      css.innerHTML = \".typewrite > .wrap { border-right: 0.08em solid #fff}\";\n      document.body.appendChild(css);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabDiv\",\n      children: /*#__PURE__*/_jsxDEV(Toggler, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainHero\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quote\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"\",\n            className: \"typewrite\",\n            \"data-period\": \"2000\",\n            \"data-type\": JSON.stringify(Mock.quote),\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"wrap\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mainTitle\",\n      children: \"Skills\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"skillsContainer\",\n      children: Mock.skills.map((skill, id) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"skill\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"skillInner\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"skillFront\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: `${skill.iconClass} skillIcon`,\n                style: {\n                  color: `${skill.iconColor}`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"skillName\",\n                children: skill.skillName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"skillBack\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: `${skill.iconClass} skillIcon`,\n                style: {\n                  color: `${skill.iconColor}`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"skillRating\",\n                children: skill.skillRating.map((rating, key) => {\n                  return /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: rating == 1 ? \"fas fa-star skillStar\" : rating == 0.5 ? \"fas fa-star-half-alt skillStar\" : \"far fa-star skillStar\"\n                  }, key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 57\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 37\n          }, this)\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 33\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mainTitle\",\n        children: \"Education\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"projectsContainer\",\n        children: Mock.education.map((element, key) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"projectContainer\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"educationName\",\n              children: element.educationType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this), element.educationitems.map((ele, id) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"eduContainer\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"eduTitle\",\n                  children: [ele.title, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"eduItem\",\n                  children: ele.value\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 21\n                }, this)]\n              }, id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 21\n              }, this);\n            })]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mainTitle\",\n          children: \"Experience\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"projectsContainer\",\n          children: Mock.experience.map((element, key) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"projectContainer\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"educationName\",\n                children: element.company_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"eduContainer\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"eduTitle\",\n                  children: \"Position :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"eduItem\",\n                  children: element.position\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"eduContainer\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"eduTitle\",\n                  children: \"Tenure :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"eduItem\",\n                  children: [element.tenure.startDate, \" - \", element.tenure.endDate]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 17\n              }, this)]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mainTitle\",\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projectsContainer\",\n      children: Mock.projects.map((project, key) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"projectContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"projectTitleContainer\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"projectName\",\n              children: project.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"projectBodyContainer\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"projectDesc\",\n              children: project.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 33\n            }, this), project.link ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                window.open(project.link, \"_blank\");\n              },\n              className: \"demoBtn\",\n              children: \"Demo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 37\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 29\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Contact, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/home/arti/Portfolio/src/components/Main.js"],"names":["React","useEffect","Mock","Contact","Toggler","Main","TxtType","el","toRotate","period","loopNum","parseInt","txt","tick","isDeleting","prototype","i","length","fullTxt","substring","innerHTML","that","delta","Math","random","setTimeout","window","onload","elements","document","getElementsByClassName","getAttribute","JSON","parse","css","createElement","type","body","appendChild","stringify","quote","skills","map","skill","id","iconClass","color","iconColor","skillName","skillRating","rating","key","education","element","educationType","educationitems","ele","title","value","experience","company_name","position","tenure","startDate","endDate","projects","project","name","description","link","open"],"mappings":"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","sourcesContent":["\nimport React from \"react\";\nimport {useEffect} from 'react'\nimport \"../styles/Main.css\"\nimport Mock from \"../Json/Mock.json\"\nimport Contact from \"./Contact\";\nimport Toggler from \"./Toggler\";\n\nfunction Main() {\n    \n    // const [showProjectInfo, setshowProjectInfo] = useState(true)\n    \n    \n    useEffect(() => {\n        var TxtType = function(el, toRotate, period) {\n            this.toRotate = toRotate;\n            this.el = el;\n            this.loopNum = 0;\n            this.period = parseInt(period, 10) || 2000;\n            this.txt = '';\n            this.tick();\n            this.isDeleting = false;\n        };\n    \n        TxtType.prototype.tick = function() {\n            var i = this.loopNum % this.toRotate.length;\n            var fullTxt = this.toRotate[i];\n    \n            if (this.isDeleting) {\n            this.txt = fullTxt.substring(0, this.txt.length - 1);\n            } else {\n            this.txt = fullTxt.substring(0, this.txt.length + 1);\n            }\n    \n            this.el.innerHTML = '<span class=\"wrap\">'+this.txt+'</span>';\n    \n            var that = this;\n            var delta = 200 - Math.random() * 100;\n    \n            if (this.isDeleting) { delta /= 2; }\n    \n            if (!this.isDeleting && this.txt === fullTxt) {\n            delta = this.period;\n            this.isDeleting = true;\n            } else if (this.isDeleting && this.txt === '') {\n            this.isDeleting = false;\n            this.loopNum++;\n            delta = 500;\n            }\n    \n            setTimeout(function() {\n            that.tick();\n            }, delta);\n        };\n    \n        window.onload = function() {\n            var elements = document.getElementsByClassName('typewrite');\n            for (var i=0; i<elements.length; i++) {\n                var toRotate = elements[i].getAttribute('data-type');\n                var period = elements[i].getAttribute('data-period');\n                if (toRotate) {\n                  new TxtType(elements[i], JSON.parse(toRotate), period);\n                }\n            }\n            // INJECT CSS\n            var css = document.createElement(\"style\");\n            css.type = \"text/css\";\n            css.innerHTML = \".typewrite > .wrap { border-right: 0.08em solid #fff}\";\n            document.body.appendChild(css);\n        };\n      },[])\n    \n    \n    \n      \n\n\n    return (\n        <div className=\"Main\">\n            <div className=\"tabDiv\">\n                <Toggler/>\n            </div>\n            <div className=\"mainHero\">\n                {/* <div className=\"quote\">\"{Mock.quote}\"</div> */}\n                <div className=\"quote\">\n                <h1>\n                <a href=\"\" className=\"typewrite\" data-period=\"2000\" data-type={JSON.stringify(Mock.quote)}>\n                    <span className=\"wrap\"></span>\n                </a>\n                </h1>\n                </div>\n            </div>\n\n            {/* My Skills  */}\n                <h2 className=\"mainTitle\">Skills</h2>\n                <div className=\"skillsContainer\">\n                    {\n                        Mock.skills.map((skill,id)=>{\n                            return(\n                                <div className=\"skill\" key={id}>\n                                    <div className=\"skillInner\">\n                                        <div className=\"skillFront\">\n                                            <i className={`${skill.iconClass} skillIcon`} style={{color:`${skill.iconColor}`}}/>\n                                            <div className=\"skillName\">{skill.skillName}</div>\n                                        </div>\n                                        <div className=\"skillBack\">\n                                            <i className={`${skill.iconClass} skillIcon`} style={{color:`${skill.iconColor}`}}/>\n                                            <div className=\"skillRating\">\n                                                {skill.skillRating.map((rating,key)=>{\n                                                    return(\n                                                        <i className={rating==1 ? \"fas fa-star skillStar\" : rating==0.5 ? \"fas fa-star-half-alt skillStar\" : \"far fa-star skillStar\"} key={key}/>\n                                                    )\n                                                })}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n            {/* My Skills  */}\n        <div className=\"tabDiv\">\n            {/* Education */}\n          <h2 className=\"mainTitle\">Education</h2>\n          <div className=\"projectsContainer\">\n          {Mock.education.map((element,key)=>{\n            return(\n              <div className=\"projectContainer\" key={key}> \n                <div className=\"educationName\">{element.educationType}</div> \n                \n                {element.educationitems.map((ele,id)=>{\n                  return(\n                    <div className=\"eduContainer\" key={id}>\n                    <div className=\"eduTitle\">{ele.title} </div>\n                    <div className=\"eduItem\">{ele.value}</div>\n                    </div>\n                  )\n                })}\n                \n              </div>\n            )\n          })}\n          </div>\n        {/* Education */}\n        {/* Experience */}\n        <div>\n          <h2 className=\"mainTitle\">Experience</h2>\n          <div className=\"projectsContainer\">\n          {Mock.experience.map((element,key)=>{\n            return(\n              <div className=\"projectContainer\" key={key}>\n                <div className=\"educationName\">{element.company_name}</div> \n                <div className=\"eduContainer\">\n                  <div className=\"eduTitle\">Position :</div>\n                  <div className=\"eduItem\">{element.position}</div>\n                </div>\n                <div className=\"eduContainer\">\n                  <div className=\"eduTitle\">Tenure :</div> \n                  <div className=\"eduItem\">{element.tenure.startDate} - {element.tenure.endDate}</div>\n                </div>\n              </div>\n            )\n          })}\n          </div>\n        </div>\n        {/* Experience */}\n        </div>\n\n            {/* Projects */}\n            <h2 className=\"mainTitle\">Projects</h2>\n            <div className=\"projectsContainer\">\n                {Mock.projects.map((project,key)=>{\n                    return(\n                        <div className=\"projectContainer\" key={key}>\n                            <div className=\"projectTitleContainer\">\n                                <h2 className=\"projectName\">{project.name}</h2>\n                                {/* <i className={showProjectInfo ? \"fas fa-chevron-down projectInfoIcon\": \"fas fa-chevron-up projectInfoIcon\"}  /> */}\n                            </div>\n                            <div className=\"projectBodyContainer\">\n                                <div className=\"projectDesc\">\n                                    {project.description}\n                                </div>\n                                {project.link ?\n                                    <button onClick={()=>{window.open(project.link, \"_blank\");}} className=\"demoBtn\">Demo</button>\n                                    : null\n                                }\n                            </div>\n                        </div>\n                    );\n                })}\n            </div>\n            {/* Projects */}\n        \n\n            {/* Contact Form  */}\n            <Contact/>\n            {/* Contact Form  */}\n            \n            \n\n            \n        </div>\n    )\n}\n\nexport default Main\n"]},"metadata":{},"sourceType":"module"}