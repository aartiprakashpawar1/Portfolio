{"ast":null,"code":"var _jsxFileName = \"/home/arti/Portfolio/src/components/Toggler.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from \"react\";\nimport \"../styles/toggler.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Toggler() {\n  _s();\n\n  const [darkMode, setdarkMode] = useState(false);\n  useEffect(() => {\n    if (localStorage.getItem(\"Dark-Mode\")) {\n      setdarkMode(true);\n      document.body.classList.add(\"dark-mode\");\n    }\n  }, []);\n\n  const toggleMode = () => {\n    var element = document.body;\n    element.classList.toggle(\"dark-mode\");\n\n    if (element.classList.contains(\"dark-mode\")) {\n      localStorage.setItem(\"Dark-Mode\", true);\n      setdarkMode(true);\n    } else {\n      localStorage.removeItem(\"Dark-Mode\");\n      setdarkMode(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    className: \"toggleLabel icon\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toggle\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"toggle-state\",\n        type: \"checkbox\",\n        onClick: () => {\n          toggleMode();\n        },\n        checked: darkMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"indicator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Toggler, \"JYa6uKWK0Y0+7BSkJJHnQfLiv/Q=\");\n\n_c = Toggler;\nexport default Toggler;\n\nvar _c;\n\n$RefreshReg$(_c, \"Toggler\");","map":{"version":3,"sources":["/home/arti/Portfolio/src/components/Toggler.js"],"names":["React","useState","useEffect","Toggler","darkMode","setdarkMode","localStorage","getItem","document","body","classList","add","toggleMode","element","toggle","contains","setItem","removeItem"],"mappings":";;;AAAA,SAAQA,KAAR,EAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAO,uBAAP;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACjB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,KAAD,CAAxC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGI,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAH,EAAqC;AACnCF,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAG,MAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,GAAxB,CAA4B,WAA5B;AACD;AACF,GALQ,EAKN,EALM,CAAT;;AAMA,QAAMC,UAAU,GAAG,MAAM;AACvB,QAAIC,OAAO,GAAGL,QAAQ,CAACC,IAAvB;AACAI,IAAAA,OAAO,CAACH,SAAR,CAAkBI,MAAlB,CAAyB,WAAzB;;AACA,QAAGD,OAAO,CAACH,SAAR,CAAkBK,QAAlB,CAA2B,WAA3B,CAAH,EAA2C;AACzCT,MAAAA,YAAY,CAACU,OAAb,CAAqB,WAArB,EAAiC,IAAjC;AACAX,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KAHD,MAGK;AACHC,MAAAA,YAAY,CAACW,UAAb,CAAwB,WAAxB;AACAZ,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD;AACF,GAVD;;AAWA,sBACE;AAAO,IAAA,SAAS,EAAC,kBAAjB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACE;AACE,QAAA,SAAS,EAAC,cADZ;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,OAAO,EAAE,MAAM;AACbO,UAAAA,UAAU;AACX,SALH;AAME,QAAA,OAAO,EAAER;AANX;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAlCQD,O;;KAAAA,O;AAoCT,eAAeA,OAAf","sourcesContent":["import {React,useState,useEffect} from \"react\";\nimport \"../styles/toggler.css\";\n\nfunction Toggler() {\n  const [darkMode, setdarkMode] = useState(false)\n  useEffect(() => {\n    if(localStorage.getItem(\"Dark-Mode\")){\n      setdarkMode(true)\n      document.body.classList.add(\"dark-mode\")\n    }\n  }, [])\n  const toggleMode = () => {\n    var element = document.body;\n    element.classList.toggle(\"dark-mode\");\n    if(element.classList.contains(\"dark-mode\")){\n      localStorage.setItem(\"Dark-Mode\",true);\n      setdarkMode(true)\n    }else{\n      localStorage.removeItem(\"Dark-Mode\")\n      setdarkMode(false)\n    }\n  };\n  return (\n    <label className=\"toggleLabel icon\">\n      <div className=\"toggle\">\n        <input\n          className=\"toggle-state\"\n          type=\"checkbox\"\n          onClick={() => {\n            toggleMode();\n          }}\n          checked={darkMode}\n        />\n        <div className=\"indicator\"></div>\n      </div>\n    </label>\n  );\n}\n\nexport default Toggler;\n"]},"metadata":{},"sourceType":"module"}