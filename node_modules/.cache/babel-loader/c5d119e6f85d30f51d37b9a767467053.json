{"ast":null,"code":"var _jsxFileName = \"/home/arti/Portfolio/src/components/Contact.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useRef } from 'react';\nimport \"../styles/sideBar.css\";\nimport Mock from \"../Json/Mock.json\";\nimport emailjs from 'emailjs-com';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Contact(props) {\n  _s();\n\n  const form = useRef();\n  const [fName, setfName] = useState(\"\");\n  const [lName, setlName] = useState(\"\");\n  const [subject, setsubject] = useState(\"\");\n  const [email, setemail] = useState(\"\");\n  const [message, setmessage] = useState(\"\");\n  const [errMsg, seterrMsg] = useState(\"\");\n  const [showMsg, setshowMsg] = useState(false);\n  const [success, setsuccess] = useState(false);\n  const [error, seterror] = useState(false);\n\n  const sendEmail = e => {\n    e.preventDefault();\n\n    if (fName && email && subject && message) {\n      emailjs.sendForm(Mock.emailJs.serviceID, Mock.emailJs.templateID, form.current, Mock.emailJs.userID).then(result => {\n        setsuccess(true);\n        setfName(\"\");\n        setlName(\"\");\n        setsubject(\"\");\n        setemail(\"\");\n        setmessage(\"\");\n        console.log(result.text);\n      }, error => {\n        seterror(true);\n        console.log(error.text);\n      });\n    } else {\n      if (!fName) {\n        seterrMsg(\"Please Enter your Name\");\n      } else if (!email) {\n        seterrMsg(\"Please Enter your Email id\");\n      } else if (!subject) {\n        seterrMsg(\"Please Enter Subject\");\n      } else if (!message) {\n        seterrMsg(\"Please Enter Message\");\n      }\n\n      setshowMsg(true);\n    }\n\n    setTimeout(() => {\n      setshowMsg(false);\n      seterrMsg(\"\");\n      setsuccess(false);\n      seterror(false);\n    }, 4000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contactFormContainer\",\n    children: [props.modal ? /*#__PURE__*/_jsxDEV(\"i\", {\n      class: \"fas fa-times closeBtn mobileDiv\",\n      onClick: () => {\n        props.setModal(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 28\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mainTitle\",\n      children: \"Contact Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      ref: form,\n      onSubmit: sendEmail,\n      className: \"contactForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"contactLabel\",\n        children: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"contactLabel desktopView\",\n        children: \"Last Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"contactInput\",\n        name: \"fname\",\n        placeholder: \"Your First Name\",\n        value: fName,\n        onChange: e => {\n          setfName(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"contactLabel mobileDiv\",\n        children: \"Last Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"contactInput\",\n        name: \"lname\",\n        placeholder: \"Your Last Name\",\n        value: lName,\n        onChange: e => {\n          setlName(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"contactLabel\",\n        children: \"Email-ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"contactLabel desktopView\",\n        children: \"Subject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        className: \"contactInput\",\n        name: \"from_mail\",\n        placeholder: \"Your Email Address\",\n        value: email,\n        onChange: e => {\n          setemail(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"contactLabel mobileDiv\",\n        children: \"Subject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"contactInput\",\n        name: \"subject\",\n        placeholder: \"Subject\",\n        value: subject,\n        onChange: e => {\n          setsubject(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"contactLabel grow\",\n        children: \"Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"message\",\n        placeholder: \"Your Message.........\",\n        className: \"contactInput1 grow\",\n        value: message,\n        onChange: e => {\n          setmessage(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        className: \"contactSubmit grow\",\n        value: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this), showMsg && errMsg ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mailFailure\",\n      children: errMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 40\n    }, this) : null, success ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mailSuccess\",\n      children: \"Mail sent Successfully !!!!!!!!!!!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 30\n    }, this) : null, error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mailFailure\",\n      children: \"Oop's Something went wrong! please try again\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 28\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Contact, \"69ddAAGoGkQPjgXz2WxlMgUf4SM=\");\n\n_c = Contact;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["/home/arti/Portfolio/src/components/Contact.js"],"names":["React","useState","useRef","Mock","emailjs","Contact","props","form","fName","setfName","lName","setlName","subject","setsubject","email","setemail","message","setmessage","errMsg","seterrMsg","showMsg","setshowMsg","success","setsuccess","error","seterror","sendEmail","e","preventDefault","sendForm","emailJs","serviceID","templateID","current","userID","then","result","console","log","text","setTimeout","modal","setModal","target","value"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {useState,useRef} from 'react'\nimport \"../styles/sideBar.css\";\nimport Mock from \"../Json/Mock.json\"\nimport emailjs from 'emailjs-com';\n\nfunction Contact(props) {\n    const form = useRef();\n    const [fName, setfName] = useState(\"\")\n    const [lName, setlName] = useState(\"\")\n    const [subject, setsubject] = useState(\"\")\n    const [email, setemail] = useState(\"\")\n    const [message, setmessage] = useState(\"\")\n    const [errMsg, seterrMsg] = useState(\"\")\n    const [showMsg, setshowMsg] = useState(false)\n    const [success, setsuccess] = useState(false)\n    const [error, seterror] = useState(false)\n\n    const sendEmail = (e) => {\n        e.preventDefault();\n        if(fName && email && subject && message){\n            emailjs.sendForm(Mock.emailJs.serviceID, Mock.emailJs.templateID, form.current, Mock.emailJs.userID)\n            .then((result) => {\n                setsuccess(true)\n                setfName(\"\")\n                setlName(\"\")\n                setsubject(\"\")\n                setemail(\"\")\n                setmessage(\"\")\n                console.log(result.text);\n            }, (error) => {\n                seterror(true)\n                console.log(error.text);\n            });\n        }else{\n            if(!fName){\n                seterrMsg(\"Please Enter your Name\")\n            }\n            else if(!email){\n                seterrMsg(\"Please Enter your Email id\")\n            }\n            else if(!subject){\n                seterrMsg(\"Please Enter Subject\")\n            }else if(!message){\n                seterrMsg(\"Please Enter Message\")\n            }\n            setshowMsg(true);\n        }\n        \n        setTimeout(() => {\n            setshowMsg(false);\n            seterrMsg(\"\");\n            setsuccess(false);\n            seterror(false);\n        }, 4000);\n    }\n    return (\n        \n            <div   className=\"contactFormContainer\">\n            {props.modal ? <i class=\"fas fa-times closeBtn mobileDiv\" onClick={()=>{props.setModal(false)}}/>:null}\n            <h2 className=\"mainTitle\">Contact Me</h2>\n                <form ref={form} onSubmit={sendEmail} className=\"contactForm\">\n                    <label className=\"contactLabel\">First Name</label>\n                    <label className=\"contactLabel desktopView\">Last Name</label>\n                    <input type=\"text\"  className=\"contactInput\" name=\"fname\" placeholder=\"Your First Name\" value={fName} onChange={(e) => {setfName(e.target.value);}} />\n\n                    <label className=\"contactLabel mobileDiv\">Last Name</label>\n                    <input type=\"text\"  className=\"contactInput\" name=\"lname\" placeholder=\"Your Last Name\" value={lName} onChange={(e) => {setlName(e.target.value);}}/>\n                    <label className=\"contactLabel\">Email-ID</label>\n                    <label className=\"contactLabel desktopView\">Subject</label>\n                    <input type=\"email\"  className=\"contactInput\" name=\"from_mail\" placeholder=\"Your Email Address\" value={email} onChange={(e) => {setemail(e.target.value);}}/>\n                    <label className=\"contactLabel mobileDiv\">Subject</label>\n                    <input type=\"text\"  className=\"contactInput\" name=\"subject\" placeholder=\"Subject\" value={subject} onChange={(e) => {setsubject(e.target.value);}}/>\n                    <label className=\"contactLabel grow\">Message</label>\n                    <textarea name=\"message\" placeholder=\"Your Message.........\" className=\"contactInput1 grow\" value={message} onChange={(e) => {setmessage(e.target.value);}}/>\n                    <input type=\"submit\"  className=\"contactSubmit grow\" value=\"Send\"/>\n                </form>\n                {(showMsg && errMsg) ? <div className=\"mailFailure\">{errMsg}</div> : null}\n                {(success) ? <div className=\"mailSuccess\">Mail sent Successfully !!!!!!!!!!!!</div> : null}\n                \n                {(error) ? <div className=\"mailFailure\">Oop's Something went wrong! please try again</div> : null}\n            </div>\n            \n\n        \n    )\n}\n\nexport default Contact\n"]},"metadata":{},"sourceType":"module"}